{"version":3,"sources":["main.js","itsChrome.js","applyTheme.js","nav.js","gsaPizza.js","gsapText.js","gsapImage.js"],"names":["itsChrome","applyTheme","nav","gsaPizza","gsapText","gsapImage","window","addEventListener","logo","style","opacity","scale","colorPicker","document","querySelector","navigator","userAgent","includes","console","log","display","colorThemes","querySelectorAll","activeTheme","localStorage","getItem","forEach","themeOption","id","checked","storeTheme","setItem","theme","burgerButton","body","navigation","navLink","pizza","footerLink","toggleNav","classList","toggle","top","scrollY","let","tween","gsap","to","x","duration","stagger","revert","link","pizz","scrollTrigger","trigger","start","end","scrub","rotate","ease","registerPlugin","ScrollTrigger","matchMedia","add","y","imgs","Array","prototype","slice","call","marginTop","clientHeight","innerHeight","options","shift","rootMargin","threshold","logObserver","IntersectionObserver","entries","entry","isIntersecting","target","observer","observe","img"],"mappings":"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","file":"all.min.js","sourcesContent":["import itsChrome from \"./itsChrome.js\";\nimport applyTheme from \"./applyTheme.js\";\nimport nav from \"./nav.js\";\nimport gsaPizza from \"./gsaPizza.js\";\nimport gsapText from \"./gsapText.js\";\nimport gsapImage from \"./gsapImage.js\";\n\n\n// console.log('It\\'s work dude!');\n// console.log(logo);\n\n/** LOADING */\n\n// const logo = document.querySelector('.logo');\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  // console.log(arrayImg)\n  logo.style.opacity = 1\n  logo.style.scale = 1\n\n  itsChrome\n  applyTheme\n  nav\n  gsaPizza\n  gsapText\n  gsapImage\n})\n","const colorPicker = document.querySelector('.color-picker fieldset')\n\nconst itsChrome = () => {\n\n  if (!navigator.userAgent.includes(\"Chrome\")) {\n    console.log(\"it's not Chrome!\");\n    colorPicker.style.display = \"none\";\n  }\n};\n\nexport default itsChrome()\n","const colorThemes = document.querySelectorAll('[name=\"theme\"]')\n\nconst applyTheme = () => {\n\nconst activeTheme = localStorage.getItem(\"theme\");\n  colorThemes.forEach((themeOption) => {\n    if (themeOption.id === activeTheme) {\n      themeOption.checked = true;\n    }\n  });\n};\n\nconst storeTheme = (theme) => {\n  localStorage.setItem(\"theme\", theme)\n}\n\ncolorThemes.forEach((themeOption) => {\n  themeOption.addEventListener('click', () => {\n    storeTheme(themeOption.id)\n  })\n})\n\nexport default applyTheme()","// import { burgerButton, navLink, navigation, pizza, footerLink, body } from \"./main.js\";\n\nconst burgerButton = document.querySelector('.nav-toggler'),\n      body = document.querySelector('body'),\n      navigation = document.querySelector('nav'),\n      navLink = document.querySelectorAll('nav a'),\n      pizza = document.querySelector('.pizza'),\n      footerLink = document.querySelector('.footer-nav a')\n\n      \n/** ANIMATION DE LA NAVIGATION */\nconst nav = () => {\n  burgerButton.addEventListener('click', toggleNav);\n  navLink.forEach((link) => { link.addEventListener('click', toggleNav); });\n\n  function toggleNav() {\n    console.log('I\\'m in!');\n    burgerButton.classList.toggle('active');\n    navigation.style.top = `${window.scrollY}px`;\n    navigation.classList.toggle('active');\n    pizza.classList.toggle('active');\n    footerLink.classList.toggle('active');\n    body.classList.toggle('stop-scrolling');\n\n    let tween = gsap.to(\".nav li a\", {\n      x: 0,\n      opacity: 1,\n      duration: 1,\n      stagger: 0.1\n    });\n\n    revertTween(tween);\n  }\n\n  function revertTween(tween) {\n    burgerButton.addEventListener('click', () => { tween.revert(); });\n    navLink.forEach((link) => link.addEventListener('click', () => { tween.revert(link); }));\n  }\n};\n\nconsole.log('Hello World!')\nexport default nav()\n","const pizz = document.querySelector('.pizza')\n\n/** ANIMATION DE LA PIZZA */\nconst gsaPizza = () => {\n\n  pizz.addEventListener('click', () => {\n    pizz.style.display = \"none\";\n  });\n\n\n  gsap.to(\n    \".pizza\", {\n    scrollTrigger: {\n      trigger: 'body',\n      start: 'top bottom',\n      end: 'bottom top',\n      scrub: true,\n      // markers: true,\n    },\n    rotate: 1080,\n    ease: 'none'\n  });\n};\n\nexport default gsaPizza()\n","const gsapText = () => {\n\n  /** ANIMATION DES TEXTES */\n  gsap.registerPlugin(ScrollTrigger);\n\n  let mm = gsap.matchMedia();\n\n  mm.add(\"(min-width:992px)\", () => {\n\n    gsap.to(\n      \".text-about h2, .text-about p\", {\n      x: 0,\n      opacity: 1,\n      duration: 1,\n      stagger: 0.2,\n      scrollTrigger: {\n        trigger: '.about',\n        // markers: true,\n        start: 'top 730px',\n        end: 'top 280px',\n        scrub: true,\n      }\n    });\n\n    gsap.to(\n      \".text-takeout h2, .text-takeout p\", {\n      x: 0,\n      opacity: 1,\n      duration: 1,\n      stagger: 0.2,\n      scrollTrigger: {\n        trigger: '.takeout',\n        // markers: true,\n        start: 'top 600px',\n        end: 'center center',\n        scrub: true,\n      }\n    });\n\n  });\n\n\n  gsap.to(\n    \".menu a\", {\n    y: 0,\n    opacity: 1,\n    duration: 1,\n    // stagger: .2,\n    scrollTrigger: {\n      trigger: '.container.menu',\n      // markers: true,\n      start: 'top 750px',\n      end: 'bottom 550px',\n      scrub: true,\n    }\n  });\n};\n\nexport default gsapText()\n","const gsapImage = () => {\n  /** ANIMATION DES IMAGES */\n\n  const imgs = Array.prototype.slice.call(document.querySelectorAll('img')), logo = document.querySelector('.logo'), marginTop = document.querySelector('body').clientHeight - window.innerHeight, arrayImg = imgs.shift();\n\n  // console.log(logo)\n  // console.log(marginTop)\n  let optionsLogo = {\n    // root: null,\n    rootMargin: `${marginTop}px 0px -80% 0px`,\n    threshold: 0.5\n  };\n\n  let options = {\n    // root: null,\n    rootMargin: `${marginTop}px 0px -30% 0px`,\n    threshold: 0\n  };\n\n\n  function handleLogo(entries) {\n    // console.log(entries)\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        entry.target.style.opacity = 0;\n        entry.target.style.scale = 0.5;\n      }\n      else {\n        entry.target.style.opacity = 1;\n        entry.target.style.scale = 1;\n      }\n    });\n  }\n\n\n  function handleIntersect(entries) {\n    // console.log(entries)\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        entry.target.style.scale = 1;\n      }\n      else {\n        entry.target.style.scale = 1.1;\n      }\n    });\n  }\n\n\n  const logObserver = new IntersectionObserver(handleLogo, optionsLogo);\n  const observer = new IntersectionObserver(handleIntersect, options);\n\n  logObserver.observe(logo);\n  imgs.forEach(img => {\n    observer.observe(img);\n  });\n};\n\nexport default gsapImage()"]}